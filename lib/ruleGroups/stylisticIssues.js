module.exports = {
  'array-bracket-spacing': ['error',
    'never',
  ],
  'block-spacing': ['error',
    'never',
  ],
  'brace-style': 'error',
  camelcase: 'off',
  'capitalized-comments': ['error',
    'always',
    {
      ignoreConsecutiveComments: true,
    },
  ],
  'comma-dangle': ['error',
    'always-multiline',
  ],
  'comma-spacing': 'error',
  'comma-style': 'error',
  'computed-property-spacing': ['error',
    'never',
  ],
  'consistent-this': 'off',
  'eol-last': 'error',
  'func-call-spacing': ['error',
    'never',
  ],
  'func-name-matching': ['error', 'always'],
  'func-names': 'off',
  'func-style': ['error',
    'expression',
  ],
  'id-blacklist': ['error',
    /* eslint-disable spellcheck/spell-checker */
    'str',
    'arr',
    'num',
    'err',
    'e',
    'cb',
    'callback',
    'evt',
    /* eslint-enable spellcheck/spell-checker */
  ],
  'id-length': 'off',
  'id-match': 'off',
  indent: ['error',
    // 2 spaces
    2,
    {
      // # of units defined above
      SwitchCase: 1,
    },
  ],
  'jsx-quotes': 'off',
  'key-spacing': 'error',
  'keyword-spacing': 'error',
  'line-comment-position': ['error', {
    position: 'above',
  }],
  'linebreak-style': 'off',
  'lines-around-comment': ['error', {
    // TODO: start enforcing it
    beforeBlockComment: false,
    // TODO: start enforcing it
    beforeLineComment: false,
    allowBlockStart: true,
    allowBlockEnd: false,
    allowObjectStart: true,
    allowObjectEnd: false,
    allowArrayStart: true,
    allowArrayEnd: false,
  }],
  'lines-around-directive': ['error',
    'always',
  ],
  'max-depth': 'error',
  'max-len': ['error',
    // Line length
    80,
    // Tab size
    2,
    {
      ignoreComments: true,
      ignoreUrls: true,
    },
  ],
  'max-lines': ['error', {
    max: 300,
    skipBlankLines: true,
    skipComments: true,
  }],
  'max-nested-callbacks': ['error', {
    max: 5,
  }],
  // It's off because it's not possible to use Angular with this setting
  // See: https://github.com/Gillespie59/eslint-plugin-angular/issues/381
  'max-params': 'off',
  'max-statements-per-line': ['error', {
    max: 1,
  }],
  'max-statements': ['error', {
    // TODO APP-346: reduce max-statements value
    max: 16,
  }],
  'multiline-ternary': 'error',
  'new-cap': 'error',
  'new-parens': 'error',
  // TODO: start enforcing it
  'newline-after-var': 'off',
  // TODO: enable it someday
  'newline-before-return': 'off',
  'newline-per-chained-call': ['error', {
    // TODO: reduce this number
    ignoreChainWithDepth: 2,
  }],
  'no-array-constructor': 'error',
  'no-bitwise': 'error',
  'no-continue': 'off',
  'no-inline-comments': 'error',
  'no-lonely-if': 'error',
  'no-mixed-operators': 'error',
  'no-mixed-spaces-and-tabs': 'error',
  'no-multiple-empty-lines': ['error', {
    max: 2,
    maxEOF: 1,
  }],
  'no-negated-condition': 'error',
  'no-nested-ternary': 'error',
  'no-new-object': 'error',
  'no-plusplus': 'off',
  'no-restricted-syntax': 'off',
  'no-tabs': 'error',
  'no-spaced-func': 'error',
  'no-ternary': 'off',
  'no-trailing-spaces': 'error',
  'no-underscore-dangle': 'off',
  'no-unneeded-ternary': 'error',
  'no-whitespace-before-property': 'error',
  // TODO: review after https://github.com/eslint/eslint/issues/6771
  'object-curly-newline': 'off',
//    'object-curly-newline': ['error', {
//      'multiline': true, <--- syntax suggested in #6770
//      'ObjectExpression': {
//        'minProperties': 2,
//        'ifLess': 'allow' <--- syntax suggested in #6771
//      },
//      'ObjectPattern': {
//        'minProperties': 5,
//      },
//    }],
  'object-curly-spacing': ['error',
    'never',
  ],
  'object-property-newline': 'off',
  'one-var-declaration-per-line': ['error',
    'always',
  ],
  'one-var': ['error',
    'never',
  ],
  'operator-assignment': 'error',
  'operator-linebreak': 'off',
  // Figure out why it doesn't work
  'padded-blocks': 'off',
  'quote-props': ['error',
    'as-needed',
  ],
  quotes: ['error',
    'single',
  ],
  'require-jsdoc': 'off',
  'semi-spacing': 'error',
  semi: 'error',
  'sort-keys': 'off',
  'sort-vars': 'off',
  'space-before-blocks': 'error',
  'space-before-function-paren': ['error', {
    anonymous: 'always',
    named: 'never',
  }],
  'space-in-parens': ['error',
    'never',
  ],
  'space-infix-ops': 'error',
  'space-unary-ops': 'error',
  'spaced-comment': 'error',
  'unicode-bom': ['error',
    'never',
  ],
  'wrap-regex': 'off',
};
